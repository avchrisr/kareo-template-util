version: '3.7'

services:

  kareo-template-util-service:
    # -- if you want to scale, each instance must have a unique container name so cannot specify a container name
    # -- if container name is not specified, the container name pattern will be [project_name]_[service_name]_[count#]
    # container_name: kareo-template-util-service
    image: kareo-template-util-service:dev
    ports:
      - 19090:${SERVER_PORT}      # for DEV purpose only
    # expose:   # even if it's not exposed, it's still reachable via 9090. is it because of the network?
    # - 9090
    networks:
      - kareo-template-util-backend
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - API_VERSION=${API_VERSION}
      - ORACLE_DB_JDBC_URL=${ORACLE_DB_JDBC_URL}
      - ORACLE_DB_USERNAME=${ORACLE_DB_USERNAME}
      - ORACLE_DB_PASSWORD=${ORACLE_DB_PASSWORD}
      - POSTGRES_DB_JDBC_URL=${POSTGRES_DB_JDBC_URL}
      - POSTGRES_DB_USERNAME=${POSTGRES_DB_USERNAME}
      - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
    depends_on:
      - postgres

  postgres:
    container_name: kareo-template-util-postgres
    image: postgres:11   # postgres:11-alpine
    # restart: always      # restart whenever changes are made in docker-compose.yml. 'no' is default
    ports:
      - 15432:5432       # for DEV purpose only
    # expose:              # Q) might not be needed like the -service container?
    #  - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_DB_USERNAME}     # if not provided, 'postgres' will be used
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}       # if not provided, it'll be the same as postgres username
#    volumes:  # temporary. might really need to create a 3rd repo for docker-compose.yml and postgres, nginx configs, etc. ex) kareo-template-util-docker-compose
#      - '/Users/chrisr/MyProjects/react-projects/lottery/pgdata:/var/lib/postgresql/data'
    networks:
      - kareo-template-util-backend

networks:
  kareo-template-util-backend:
    driver: bridge
